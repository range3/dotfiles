#!/bin/bash
set -euo pipefail

YADM_DIR="$(cd "$(dirname "${BASH_SOURCE:-$0}")" &>/dev/null && pwd)"

append_if_not_exists() {
  local file="$1"
  local input=$(cat)

  if ! grep -Fxq "$input" "$file" 2>/dev/null; then
    echo "$input" >>"$file"
  fi
}

append_if_not_exists ~/.bashrc <<EOF
source "$HOME/.config/bash/bashrc"
EOF

mkdir -p ~/.local/bin
if [ ! -f ~/.local/bin/mise ]; then
  echo "mise not found, installing..."
  curl https://mise.run | sh
fi
mkdir -p ~/.local/share/bash-completion/completions
~/.local/bin/mise completion bash --include-bash-completion-lib \
  > ~/.local/share/bash-completion/completions/mise

mkdir -p ~/.bookmarks

echo "----- import trusted gpg keys -----"
get_gpg_fingerprint() {
  local file="$1"

  gpg \
    --with-colons \
    --import-options show-only \
    --import "$file" 2>/dev/null \
  | grep ^pub -A 1 \
  | grep ^fpr \
  | cut -d : -f 10
}

GPG_DIR="${YADM_DIR}/trusted.gpg.d"
if ! command -v gpg &>/dev/null; then
  echo "gpg command not found, skipping GPG key import." >&2
elif [ -d "$GPG_DIR" ]; then
  fingerprints=()

  for asc in "$GPG_DIR"/*.asc; do
    echo "Importing $(basename "$asc")"
    gpg --import "$asc"
    fingerprints+=($(get_gpg_fingerprint "$asc"))
  done

  {
    for fp in "${fingerprints[@]}"; do
      echo "$fp:6:"
    done
  } | gpg --import-ownertrust
fi
